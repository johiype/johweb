name: "Johweb App Staging Workflow"
on:
  workflow_dispatch:  # in future change this to 'app-staging' branch
    branches:
      - infra-staging
    paths:
      - webapp/*

env:
  TF_VAR_THE_KEY: ${{ secrets.TF_VAR_THE_KEY }}
  WEBSRV_USR: ${{ vars.WEBSRV_USR }}
  ECR_ENDPOINT: ${{ vars.ECR_ENDPOINT }}
  HOST_IP: ${{ vars.HOST_IP }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}

jobs:
  changes:
    name: "Check for any code changes in App code or Dockerfile"
    runs-on: ubuntu-latest
    outputs:
      app_code: ${{ steps.filter.outputs.app_code }}
      dockerfile: ${{ steps.filter.outputs.dockerfile }}
      
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          app_code:
            - 'webapp/2106_soft_landing/**'
          dockerfile:
            -  'webapp/Dockerfile'

  #ecr:
    #name: "Call ECR_Build_Upload Workflow"
    #uses: ./.github/workflows/image_build_upload.yml
    #needs: changes
    #if: ${{ needs.changes.outputs.dockerfile == 'true' }}
    #secrets: inherit
    
  boto3:
    name: "Gather Instance Details"
    #needs: ecr
    runs-on: ubuntu-latest
    outputs:
      web_server_ip: ${{ steps.pyscript.outputs.web }}
      proxy_server_ip: ${{ steps.pyscript.outputs.proxy }}
      bastion_host_args: ${{ steps.pyscript.outputs.bastion }}

    steps:
      - name: Install pip3
        run: sudo apt install python3-pip -y

      - name: Install Boto3
        run: pip3 install boto3

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.TF_VAR_THE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
      - name: Edit SSH Config to prevent Host Checking 
        run: |
          touch ~/.ssh/config
          cat << EOF >> ~/.ssh/config
          Host *
            StrictHostKeyChecking no
            UserKnownHostsFile=/dev/null
          EOF
          cat ~/.ssh/config
    
      - name: Checkout Source Code
        uses: actions/checkout@v2
        with:
          ref: infra-staging # change to 'main' when push branch changes to 'pull_request'


      - name: Run Dynamic Inventory Script
        id: pyscript
        run: |
          ansible/dynamic-inventory.py > inventory.json
          web_server_ip=$(jq -r .web_servers.hosts[0] inventory.json)
          proxy_server_ip=$(jq -r .web_servers.hosts[0] inventory.json)
          bastion_host_args=$(jq -r .web_servers.vars.ansible_ssh_common_args inventory.json)
          
          echo "web=${web_server_ip}" >> "$GITHUB_OUTPUT"
          echo "proxy=${proxy_server_ip}" >> "$GITHUB_OUTPUT"
          echo "bastion=${bastion_host_args}" >> "$GITHUB_OUTPUT"
          
  Staging:
    name: "Prepare and Deploy Web App Staging Environment"
    runs-on: ubuntu-latest
    needs: boto3

    steps: 
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.TF_VAR_THE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
        env:
          PRIVATE_KEY: ${{ secrets.TF_VAR_THE_KEY }}

      - name: Checkout Source Code
        uses: actions/checkout@v2
        with:
          ref: app-staging        ## change to 'app-staging'

      - name: Edit SSH Config to prevent Host Checking
        run: |
          touch ~/.ssh/config
          cat << EOF >> ~/.ssh/config
          Host *
            StrictHostKeyChecking no
            UserKnownHostsFile=/dev/null
          EOF
          cat ~/.ssh/config
          
      - name: "Copy Compose File to Web Server"
        run: |

          # Creating staging folders 
          ssh ${{needs.boto3.outputs.bastion_host_args}} ${{ vars.WEBSRV_USR }}@${{needs.boto3.outputs.web_server_ip}} "
          mkdir -p /home/${{ vars.WEBSRV_USR }}/staging
          mkdir -p /home/${{ vars.WEBSRV_USR }}/staging/johweb-content
          "
          # Copying Compose file to webserver
          scp ${{needs.boto3.outputs.bastion_host_args}} webapp/compose.yml webapp/compose.staging.yml ${{vars.WEBSRV_USR}}@${{needs.boto3.outputs.web_server_ip}}:/home/${{vars.WEBSRV_USR}}/staging

      - name: "Setting up Hugo"
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: '0.128.0'

      - name: "Building Hugo Site"
        working-directory: ./webapp/johweb-site
        run: hugo

      - name: "Copying Hugo Built Files to Web Server"
        run: |
          scp -r ${{needs.boto3.outputs.bastion_host_args}} webapp/johweb-site/public/* ${{vars.WEBSRV_USR}}@${{needs.boto3.outputs.web_server_ip}}:/home/${{vars.WEBSRV_USR}}/staging/johweb-content
        

      - name: "Preparing Staging Environment in Web Server"
        run: |
          ssh ${{needs.boto3.outputs.bastion_host_args}} ${{ vars.WEBSRV_USR }}@${{needs.boto3.outputs.web_server_ip}} '

            # Set permissions on Compose file in Web Server
            sudo chown ${{ vars.WEBSRV_USR }}:${{ vars.WEBSRV_USR }} /home/${{ vars.WEBSRV_USR }}/staging/compose.yml && sudo chmod 0644 /home/${{ vars.WEBSRV_USR }}/staging/compose.yml
            
            
            # Set permissions on Compose.staging file in Web Server
            sudo chown ${{ vars.WEBSRV_USR }}:${{ vars.WEBSRV_USR }} /home/${{ vars.WEBSRV_USR }}/staging/compose.staging.yml && sudo chmod 0644 /home/${{ vars.WEBSRV_USR }}/staging/compose.staging.yml

            # Starting Web Server through Docker Compose
            docker-compose -f /home/${{ vars.WEBSRV_USR }}/staging/compose.yml -f /home/${{ vars.WEBSRV_USR }}/staging/compose.staging.yml up -d johweb
            
          '


      
      # - name: Copy Docker Compose File to Web Server
        # run: |
          # scp ${{needs.boto3.outputs.bastion_host_args}} webapp/compose.yml ${{vars.WEBSRV_USR}}@${{needs.boto3.outputs.web_server_ip}}:/home/${{vars.WEBSRV_USR}}/
          # scp ${{needs.boto3.outputs.bastion_host_args}} webapp/compose.yml ${{vars.WEBSRV_USR}}@${{needs.boto3.outputs.proxy_server_ip}}:/home/${{vars.WEBSRV_USR}}/

      #- name: Set permissions on Docker Compose file in Web Server
        #run: >
          #ssh ${{needs.boto3.outputs.bastion_host_args}}
          #${{ vars.WEBSRV_USR }}@${{needs.boto3.outputs.web_server_ip}}
          #"sudo chown ${{ vars.WEBSRV_USR }}:${{ vars.WEBSRV_USR }}
          #/home/${{ vars.WEBSRV_USR }}/compose.yml && sudo chmod 0644 /home/${{ vars.WEBSRV_USR }}/compose.yml" 
          
      #- name: Starting Web Server through Docker Compose
        #run: >
          #ssh ${{needs.boto3.outputs.bastion_host_args}}
          #${{ vars.WEBSRV_USR }}@${{needs.boto3.outputs.web_server_ip}}
          #"docker-compose -f /home/${{ vars.WEBSRV_USR }}/compose.yml up -d johweb"
          
