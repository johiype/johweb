name: "Johweb Terraform IaC Workflow"
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - terraform/**

  push:
    branches:
      - main
    paths:
      - terraform/**

permissions:
  pull-requests: write # This is required for gh bot to comment PR

env:
  TF_LOG: INFO
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_VAR_THE_KEY: ${{ secrets.TF_VAR_THE_KEY }}
  TF_VAR_THE_PUB_KEY: ${{ secrets.TF_VAR_THE_PUB_KEY }}
  TF_VAR_BUCKET_NAME:  ${{ vars.TF_VAR_BUCKET_NAME }}
  TF_VAR_BUCKET_KEY:  ${{ vars.TF_VAR_BUCKET_KEY }}
  TF_VAR_BUCKET_REGION:  ${{ vars.TF_VAR_BUCKET_REGION }}
  TF_VAR_WEBSRV_AMI_ID:  ${{ vars.TF_VAR_WEBSRV_AMI_ID }}
  TF_VAR_BASTION_AMI_ID: ${{ vars.TF_VAR_BASTION_AMI_ID }}

  TF_VAR_ECR_NAME:  ${{ vars.TF_VAR_ECR_NAME }}
  WEBSRV_USR: ${{ vars.WEBSRV_USR }}
  HOST_IP: ${{ vars.HOST_IP }}

jobs:
  Terraform:
    name: "Apply Terraform Code Changes"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2
        with:
          ref: main
      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.3

      - name: Terraform init
        id: init
        run: terraform init -backend-config="bucket=$TF_VAR_BUCKET_NAME"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -detailed-exitcode -no-color -input=false
        if: github.event_name == 'pull_request'
        continue-on-error: true

      - name: Comment on Pull Request
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style ��\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
            #### Terraform Validation ��\`${{ steps.validate.outcome }}\`
            <details><summary>Validation Output</summary>

            \`\`\`\n
            ${{ steps.validate.outputs.stdout }}
            \`\`\`

            </details>

            #### Terraform Plan ��\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Check for Plan Failure
        if: steps.plan.outputs.exitcode == 1
        run: exit 1

      - name: Terraform Apply
        if: (github.ref == 'refs/heads/main' && github.event_name == 'push') || (github.event_name == 'workflow_dispatch')
        run: terraform apply -auto-approve -input=false

  Trigger_Ansible_Workflow:
    name: "Trigger Ansible Workflow"
    uses: ./.github/workflows/cac_workflow.yml
    needs: Terraform
    secrets: inherit
